---
layout: post
title: You don't need to read all the patterns in the DDD book
tags:
- LLM
author: Willem van den Ende
image: 
---

TLDR:

You are not meant to read all patterns in a design patterns book. Read the introduction, browse through the patterns in the list - usually at the back of the front cover,
Note a few that spark your interest, and read those.

I need to remite myself regularly of this, so this short post is as much for me, as it is for you.

I've met many people who somewhat sheepishly say, I haven't read the entire domain driven design book.
And I think that's okay. In fact, I think your meant not to read the whole book.
The book, like all patterns books, is a collection of design patterns and design patterns are a solution for a problem in a context.
So if you don't have the, if you're not in the right context, that much is the pattern and you don't have the problem,
then you don't need the pattern.

So I think the best way to read a pattern's book is to maybe read the introduction to see what it's about.
Browse through a few patterns. And then go back to the list of patterns in the beginning of the book
with a brief description and see if any of these patterns are metch a problem that you have or something that you're interested in, that's a bit trickier.
And then read the pattern and read the context and the problem carefully.
And if that matches, then you might try out the solutions if that works for you.

> And if it doesn't work for you, that's okay.

It's a pattern. It's something that someone found useful in a couple of matches for the context and problem there.
But if it's not a good match, that means your problem is slightly different. You learn something about your problem.

Software development often has two outcomes.
Well, hopefully, working so far and learning, and sometimes, yeah, you learned that the pattern actually wasn't too good match for your problem and that's fine. You revert, iterate, and continue.
